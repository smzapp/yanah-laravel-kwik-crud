<?php
namespace App\CrudKwik\{{modelPlural}};

use Illuminate\Database\Eloquent\Builder; 
use Yanah\LaravelKwik\App\Contracts\ControlCrudInterface;
use Yanah\LaravelKwik\App\Contracts\BodyPaginatorInterface;
use Yanah\LaravelKwik\App\Contracts\BodyCollectionInterface;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Collection;
use Yanah\LaravelKwik\Crud\CrudListControl;
use Yanah\LaravelKwik\Enums\ListTemplateViewEnum;


class {{modelName}}List implements ControlCrudInterface, BodyPaginatorInterface, BodyCollectionInterface
{
    private $perPage  = 15;

   /**
     * Specify the fields to be shown on the table.
     * 
     * Format: {field_name: table_header_name}
     */
    public $activeFields = [
        //example: 'id' => 'ID', 
    ];


    /**
     * Return default Index Template view for this List
     * @return TABLELIST | LISTITEM
     */
    public function getListView(): ListTemplateViewEnum
    {
        return ListTemplateViewEnum::TABLELIST; 
    }

    
    /**
     * See CrudListControl to see more toggle visibility
     */
    public function toggleVisibility(CrudListControl $control) : array
    {
        $control->set('showSearch', true); // showSearch appears if getListView() is TABLELIST

        return $control->get()->toArray();
    }


    /**
     * Interface: BodyPaginatorInterface
     * 
     * Customize the body with Pagination 
     */
    public function responseBodyPaginator(Builder $query) : LengthAwarePaginator
    {
        return $query->paginate($this->perPage);
    }   

    /**
     * Interface: BodyCollectionInterface
     * 
     * Customize the body without a pagination. 
     */
    public function responseBodyCollection(Builder $query) : Collection
    {
        return $query->get()->map(function($item) {
            $item->primary   = $item->title ?? 'N/A';
            $item->secondary = $item->body ?? 'N/A';
            return $item;
        });
    }   

    /**
     * Configure this result query
     * 
     * @param $q: This comes from query search input box
     */
    public function search(Builder $query, string $q) : Builder
    {
        // Example: return $query->where('title', $q);

        return $query;
    }
}